{"version":3,"sources":["components/PhraseItem.js","components/SelectListItem.js","App.js","reportWebVitals.js","index.js"],"names":["PhraseItem","props","token","tokenText","mask","onDragOver","e","preventDefault","stopPropagation","tokenIndex","onDrop","droppedItem","dataTransfer","getData","console","log","updatePhraseMask","onDragEnter","draggable","className","renderPhraseToken","SelectListItem","onDragStart","setData","target","handleDragStart","tokenidx","App","phrase","fullTerm","fullDef","tokens","useState","termIndex","setTermIndex","quizSolved","setQuizSolved","pointsWon","setPointsWon","phrases","setPhrases","updatePhraseToken","tokenId","map","p","i","tempObj","solvedState","filter","x","length","isSolved","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAEe,SAASA,EAAWC,GAiCjC,OAd0B,SAACC,GACvB,IAAIC,EAAYD,EAAME,KAAO,gBAAkBF,EAAMA,MACrD,OACE,sBACIG,WAAY,SAACC,GAAD,OArBD,SAACA,GAChBA,EAAEC,iBACFD,EAAEE,kBAmBqBH,CAAWC,EAAGL,EAAMQ,aACvCC,OAAQ,SAACJ,GAAD,OAjBD,SAACA,EAAGG,GACfH,EAAEC,iBACF,IAAMI,EAAcL,EAAEM,aAAaC,QAAQ,aACvCF,GACIA,GAAeF,IACfK,QAAQC,IAAIJ,EAAa,6BAA8BF,GACvDR,EAAMe,iBAAiBP,IAWZC,CAAOJ,EAAGL,EAAMQ,aAC/BQ,YAAa,SAACX,GAAD,OAAOA,EAAEC,kBACtBW,WAAS,EACTC,UAAU,iBALd,UAMG,IACD,mBAAGA,UAAU,QAAb,SAAsBhB,OAIvBiB,CAAkBnB,EAAMC,OCjClB,SAASmB,EAAepB,GAGrC,IAQyBC,EAiBzB,OAjByBA,EAiBFD,EAAMC,OAhBjBE,KAEN,qBACEc,WAAS,EACTI,YAAa,SAAChB,GAAD,OAbG,SAACA,EAAGJ,GAC1BI,EAAEM,aAAaW,QAAQ,YAAarB,GACpCI,EAAEE,kBACFM,QAAQC,IAAIT,EAAEM,cACdE,QAAQC,IAAI,mBAAoBT,EAAEkB,OAAQtB,GAShBuB,CAAgBnB,EAAGJ,EAAMO,aAC7CU,UAAU,6BACVO,SAAUxB,EAAMO,WAJlB,SAME,oBAAIU,UAAU,QAAd,SAAuBjB,EAAMA,UAI1B,KC+IEyB,MAjKf,WAGE,IAAMC,EAAS,CACb,CACEC,SAAU,oBACVC,QACE,uIACFC,OAAQ,CACN,CAAE7B,MAAO,MAAOE,MAAM,EAAOK,WAAY,GACzC,CAAEP,MAAO,YAAaE,MAAM,EAAMK,WAAY,GAC9C,CAAEP,MAAO,UAAWE,MAAM,EAAOK,WAAY,GAC7C,CAAEP,MAAO,SAAUE,MAAM,EAAOK,WAAY,GAC5C,CAAEP,MAAO,KAAME,MAAM,EAAOK,WAAY,GACxC,CAAEP,MAAO,IAAKE,MAAM,EAAOK,WAAY,GACvC,CAAEP,MAAO,SAAUE,MAAM,EAAOK,WAAY,GAC5C,CAAEP,MAAO,aAAcE,MAAM,EAAMK,WAAY,GAC/C,CAAEP,MAAO,KAAME,MAAM,EAAOK,WAAY,GACxC,CAAEP,MAAO,IAAKE,MAAM,EAAOK,WAAY,GACvC,CAAEP,MAAO,SAAUE,MAAM,EAAOK,WAAY,IAC5C,CAAEP,MAAO,KAAME,MAAM,EAAOK,WAAY,IACxC,CAAEP,MAAO,IAAKE,MAAM,EAAOK,WAAY,IACvC,CAAEP,MAAO,aAAcE,MAAM,EAAOK,WAAY,IAChD,CAAEP,MAAO,OAAQE,MAAM,EAAOK,WAAY,IAC1C,CAAEP,MAAO,aAAcE,MAAM,EAAMK,WAAY,IAC/C,CAAEP,MAAO,SAAUE,MAAM,EAAOK,WAAY,IAC5C,CAAEP,MAAO,MAAOE,MAAM,EAAOK,WAAY,IACzC,CAAEP,MAAO,IAAKE,MAAM,EAAOK,WAAY,IACvC,CAAEP,MAAO,QAASE,MAAM,EAAOK,WAAY,IAC3C,CAAEP,MAAO,KAAME,MAAM,EAAOK,WAAY,IACxC,CAAEP,MAAO,MAAOE,MAAM,EAAOK,WAAY,IACzC,CAAEP,MAAO,OAAQE,MAAM,EAAMK,WAAY,IACzC,CAAEP,MAAO,QAASE,MAAM,EAAOK,WAAY,MAG/C,CACEoB,SAAU,oBACVC,QACE,kRACFC,OAAQ,CACN,CAAE7B,MAAO,SAAUE,MAAM,EAAOK,WAAY,GAC5C,CAAEP,MAAO,aAAcE,MAAM,EAAOK,WAAY,GAChD,CAAEP,MAAO,MAAOE,MAAM,EAAOK,WAAY,GACzC,CAAEP,MAAO,MAAOE,MAAM,EAAOK,WAAY,GACzC,CAAEP,MAAO,YAAaE,MAAM,EAAMK,WAAY,GAC9C,CAAEP,MAAO,SAAUE,MAAM,EAAOK,WAAY,GAC5C,CAAEP,MAAO,KAAME,MAAM,EAAOK,WAAY,GACxC,CAAEP,MAAO,MAAOE,MAAM,EAAOK,WAAY,GACzC,CAAEP,MAAO,OAAQE,MAAM,EAAOK,WAAY,GAC1C,CAAEP,MAAO,aAAcE,MAAM,EAAOK,WAAY,GAChD,CAAEP,MAAO,SAAUE,MAAM,EAAOK,WAAY,IAC5C,CAAEP,MAAO,KAAME,MAAM,EAAOK,WAAY,IACxC,CAAEP,MAAO,MAAOE,MAAM,EAAOK,WAAY,IACzC,CAAEP,MAAO,cAAeE,MAAM,EAAMK,WAAY,IAChD,CAAEP,MAAO,WAAYE,MAAM,EAAOK,WAAY,IAC9C,CAAEP,MAAO,KAAME,MAAM,EAAOK,WAAY,IACxC,CAAEP,MAAO,OAAQE,MAAM,EAAOK,WAAY,IAC1C,CAAEP,MAAO,QAASE,MAAM,EAAOK,WAAY,IAC3C,CAAEP,MAAO,KAAME,MAAM,EAAOK,WAAY,IACxC,CAAEP,MAAO,IAAKE,MAAM,EAAOK,WAAY,IACvC,CAAEP,MAAO,YAAaE,MAAM,EAAOK,WAAY,IAC/C,CAAEP,MAAO,SAAUE,MAAM,EAAOK,WAAY,IAC5C,CAAEP,MAAO,MAAOE,MAAM,EAAOK,WAAY,IACzC,CAAEP,MAAO,cAAeE,MAAM,EAAMK,WAAY,IAChD,CAAEP,MAAO,SAAUE,MAAM,EAAOK,WAAY,IAC5C,CAAEP,MAAO,OAAQE,MAAM,EAAOK,WAAY,IAC1C,CAAEP,MAAO,WAAYE,MAAM,EAAMK,WAAY,IAC7C,CAAEP,MAAO,OAAQE,MAAM,EAAOK,WAAY,IAC1C,CAAEP,MAAO,MAAOE,MAAM,EAAOK,WAAY,IACzC,CAAEP,MAAO,YAAaE,MAAM,EAAOK,WAAY,IAC/C,CAAEP,MAAO,OAAQE,MAAM,EAAOK,WAAY,IAC1C,CAAEP,MAAO,OAAQE,MAAM,EAAOK,WAAY,IAC1C,CAAEP,MAAO,QAASE,MAAM,EAAOK,WAAY,IAC3C,CAAEP,MAAO,MAAOE,MAAM,EAAOK,WAAY,IACzC,CAAEP,MAAO,OAAQE,MAAM,EAAOK,WAAY,IAC1C,CAAEP,MAAO,WAAYE,MAAM,EAAOK,WAAY,IAC9C,CAAEP,MAAO,OAAQE,MAAM,EAAOK,WAAY,IAC1C,CAAEP,MAAO,WAAYE,MAAM,EAAMK,WAAY,IAC7C,CAAEP,MAAO,MAAOE,MAAM,EAAOK,WAAY,IACzC,CAAEP,MAAO,OAAQE,MAAM,EAAOK,WAAY,IAC1C,CAAEP,MAAO,KAAME,MAAM,EAAOK,WAAY,IACxC,CAAEP,MAAO,MAAOE,MAAM,EAAOK,WAAY,IACzC,CAAEP,MAAO,aAAcE,MAAM,EAAOK,WAAY,OAlFzC,EAuFqBuB,mBAAS,GAvF9B,mBAuFNC,EAvFM,KAuFKC,EAvFL,OAwFuBF,oBAAS,GAxFhC,mBAwFNG,EAxFM,KAwFMC,EAxFN,OAyFqBJ,mBAAS,GAzF9B,mBAyFNK,EAzFM,KAyFKC,EAzFL,OA2FiBN,mBAASJ,GA3F1B,mBA2FNW,EA3FM,KA2FGC,EA3FH,KAkHPC,EAAoB,SAACC,GACzBF,EACED,EAAQI,KAAI,SAACC,EAAGC,GACd,GAAIZ,GAAaY,EAAG,CAClB,IAAIC,EAAUF,EAEd,OADAE,EAAQf,OAAOW,GAAStC,MAAO,EACxB0C,EAEP,OAAOF,MAzBE,WACf,IAAIG,EACFR,EAAQN,GAAWF,OAAOiB,QAAO,SAAAC,GAAC,OAAe,IAAXA,EAAE7C,QAAgB8C,QAAUX,EAAQN,GAAWF,OAAOmB,OAC5FpC,QAAQC,IAAIgC,EAAa,uBACrBA,IACFX,GAAc,GACdtB,QAAQC,IAAI,kBACZuB,EAAaD,EAAY,IAsB7Bc,IAGF,OACE,sBAAKhC,UAAU,MAAf,UACE,mCACE,sBAAKA,UAAU,SAAf,8BAA0CkB,KAC1C,6BAAKT,EAAOK,GAAWJ,cAEzB,qBAAKV,UAAU,sBAAf,SACGoB,EAAQN,GAAWF,OAAOY,KAAI,SAACzC,EAAOO,GAAR,OAC7B,qBAAKS,WAAS,EAACC,UAAU,iBAAzB,SACE,cAACnB,EAAD,CACEE,MAAOA,EACPO,WAAYP,EAAMO,WAClBO,iBAAkByB,WAM1B,sBAAKtB,UAAU,wBAAf,UACE,6BACGoB,EAAQN,GAAWF,OAAOY,KAAI,SAACzC,EAAOO,GAAR,OAC7B,cAACY,EAAD,CAAgBnB,MAAOA,EAAOO,WAAYP,EAAMO,kBAGnD0B,EACC,wBAAQiB,QAAS,kBA7CvBlB,EAAaD,EAAY,GACzBnB,QAAQC,IAAIkB,EAAW,0BACvBG,GAAc,IA2CR,4BACE,YCvJGiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.434544e4.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function PhraseItem(props) {\n\n    const onDragOver = (e) => {\n        e.preventDefault();\n        e.stopPropagation();        \n    }\n\n    const onDrop = (e, tokenIndex) => {\n        e.preventDefault();\n        const droppedItem = e.dataTransfer.getData(\"drag-item\");\n        if (droppedItem) {\n            if (droppedItem == tokenIndex) {\n                console.log(droppedItem, 'Was correctly dropped onto', tokenIndex)\n                props.updatePhraseMask(tokenIndex)\n\n            }\n        }\n    }\n\n  const renderPhraseToken = (token) => {\n      let tokenText = token.mask ? '_____________' : token.token\n      return (\n        <div \n            onDragOver={(e) => onDragOver(e, props.tokenIndex)} \n            onDrop={(e) => onDrop(e, props.tokenIndex)}\n            onDragEnter={(e) => e.preventDefault()}\n            draggable \n            className=\"flex-item wrap\">\n          {\" \"}\n          <p className=\"token\">{tokenText}</p>\n        </div>\n      );\n    }\n  return renderPhraseToken(props.token);\n}\n","import React from \"react\";\n\nexport default function SelectListItem(props) {\n\n\n  const handleDragStart = (e, token) => {\n    e.dataTransfer.setData('drag-item', token)\n    e.stopPropagation();\n    console.log(e.dataTransfer)\n    console.log(\"dragging started\", e.target, token);\n    \n  };\n\n  const renderListToken = (token) => {\n    if (token.mask) {\n      return (\n        <div\n          draggable\n          onDragStart={(e) => handleDragStart(e, token.tokenIndex)}\n          className=\"flex-item-dragtotop nowrap\"\n          tokenidx={token.tokenIndex}\n        >\n          <li className=\"token\">{token.token}</li>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  return renderListToken(props.token);\n}\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport PhraseItem from \"./components/PhraseItem\";\nimport SelectListItem from \"./components/SelectListItem\";\n\n// https://css-tricks.com/almanac/properties/f/flex-wrap/\n// https://www.pluralsight.com/guides/drag-and-drop-react-components\n\nfunction App() {\n  // create multiple definitions and do the shoot\n\n  const phrase = [\n    {\n      fullTerm: \"Sister chromatids\",\n      fullDef:\n        \"Two identical strands joined by a common centromere as a result of a chromosome that duplicated during the S phase of the cell cycle\",\n      tokens: [\n        { token: \"Two\", mask: false, tokenIndex: 0 },\n        { token: \"identical\", mask: true, tokenIndex: 1 },\n        { token: \"strands\", mask: false, tokenIndex: 2 },\n        { token: \"joined\", mask: false, tokenIndex: 3 },\n        { token: \"by\", mask: false, tokenIndex: 4 },\n        { token: \"a\", mask: false, tokenIndex: 5 },\n        { token: \"common\", mask: false, tokenIndex: 6 },\n        { token: \"centromere\", mask: true, tokenIndex: 7 },\n        { token: \"as\", mask: false, tokenIndex: 8 },\n        { token: \"a\", mask: false, tokenIndex: 9 },\n        { token: \"result\", mask: false, tokenIndex: 10 },\n        { token: \"of\", mask: false, tokenIndex: 11 },\n        { token: \"a\", mask: false, tokenIndex: 12 },\n        { token: \"chromosome\", mask: false, tokenIndex: 13 },\n        { token: \"that\", mask: false, tokenIndex: 14 },\n        { token: \"duplicated\", mask: true, tokenIndex: 15 },\n        { token: \"during\", mask: false, tokenIndex: 16 },\n        { token: \"the\", mask: false, tokenIndex: 17 },\n        { token: \"S\", mask: false, tokenIndex: 18 },\n        { token: \"phase\", mask: false, tokenIndex: 19 },\n        { token: \"of\", mask: false, tokenIndex: 20 },\n        { token: \"the\", mask: false, tokenIndex: 21 },\n        { token: \"cell\", mask: true, tokenIndex: 22 },\n        { token: \"cycle\", mask: false, tokenIndex: 23 },\n      ],\n    },\n    {\n      fullTerm: \"Sister chromatids\",\n      fullDef:\n        \"Sister chromatids are two identical copies of the same chromosome formed by DNA replication, attached to each other by a structure called the centromere. During cell division, they are separated from each other, and each daughter cell receives one copy of the chromosome.\",\n      tokens: [\n        { token: \"Sister\", mask: false, tokenIndex: 0 },\n        { token: \"chromatids\", mask: false, tokenIndex: 1 },\n        { token: \"are\", mask: false, tokenIndex: 2 },\n        { token: \"two\", mask: false, tokenIndex: 3 },\n        { token: \"identical\", mask: true, tokenIndex: 4 },\n        { token: \"copies\", mask: false, tokenIndex: 5 },\n        { token: \"of\", mask: false, tokenIndex: 6 },\n        { token: \"the\", mask: false, tokenIndex: 7 },\n        { token: \"same\", mask: false, tokenIndex: 8 },\n        { token: \"chromasome\", mask: false, tokenIndex: 9 },\n        { token: \"formed\", mask: false, tokenIndex: 10 },\n        { token: \"by\", mask: false, tokenIndex: 11 },\n        { token: \"DNA\", mask: false, tokenIndex: 12 },\n        { token: \"replication\", mask: true, tokenIndex: 13 },\n        { token: \"attached\", mask: false, tokenIndex: 14 },\n        { token: \"to\", mask: false, tokenIndex: 15 },\n        { token: \"each\", mask: false, tokenIndex: 16 },\n        { token: \"other\", mask: false, tokenIndex: 17 },\n        { token: \"by\", mask: false, tokenIndex: 18 },\n        { token: \"a\", mask: false, tokenIndex: 19 },\n        { token: \"structure\", mask: false, tokenIndex: 20 },\n        { token: \"called\", mask: false, tokenIndex: 21 },\n        { token: \"the\", mask: false, tokenIndex: 22 },\n        { token: \"centromere.\", mask: true, tokenIndex: 23 },\n        { token: \"During\", mask: false, tokenIndex: 24 },\n        { token: \"cell\", mask: false, tokenIndex: 25 },\n        { token: \"division\", mask: true, tokenIndex: 26 },\n        { token: \"they\", mask: false, tokenIndex: 27 },\n        { token: \"are\", mask: false, tokenIndex: 28 },\n        { token: \"separated\", mask: false, tokenIndex: 29 },\n        { token: \"from\", mask: false, tokenIndex: 30 },\n        { token: \"each\", mask: false, tokenIndex: 31 },\n        { token: \"other\", mask: false, tokenIndex: 32 },\n        { token: \"and\", mask: false, tokenIndex: 33 },\n        { token: \"each\", mask: false, tokenIndex: 34 },\n        { token: \"daughter\", mask: false, tokenIndex: 35 },\n        { token: \"cell\", mask: false, tokenIndex: 36 },\n        { token: \"receives\", mask: true, tokenIndex: 37 },\n        { token: \"one\", mask: false, tokenIndex: 38 },\n        { token: \"copy\", mask: false, tokenIndex: 39 },\n        { token: \"of\", mask: false, tokenIndex: 40 },\n        { token: \"the\", mask: false, tokenIndex: 41 },\n        { token: \"chromosome\", mask: false, tokenIndex: 42 },\n      ],\n    },    \n  ];  \n\n  const [termIndex, setTermIndex] = useState(0);\n  const [quizSolved, setQuizSolved] = useState(false);\n  const [pointsWon, setPointsWon] = useState(0);\n  // const [phrases, setPhrases] = useState(phrase[termIndex].tokens);\n  const [phrases, setPhrases] = useState(phrase);\n\n  // Similar to componentDidMount and componentDidUpdate:\n\n\n  // How to know if it's solved?\n  const isSolved = () => {\n    let solvedState =\n      phrases[termIndex].tokens.filter(x => x.mask === false).length == phrases[termIndex].tokens.length;\n      console.log(solvedState, 'is the solved state')\n      if (solvedState) {\n        setQuizSolved(true);\n        console.log('Quiz is solved')\n        setPointsWon(pointsWon + 1)\n      }  \n  };\n\n  const nextButton = () => {\n    setTermIndex(termIndex + 1)\n    console.log(termIndex, 'is the term index')\n    setQuizSolved(false)\n  };\n\n  const updatePhraseToken = (tokenId) => {\n    setPhrases(\n      phrases.map((p, i) => {\n        if (termIndex == i) {\n          let tempObj = p; \n          tempObj.tokens[tokenId].mask = false;\n          return tempObj\n        } else {\n          return p\n        }\n      })\n    )\n    isSolved()\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <div className=\"points\">Pop Quiz Points: {pointsWon}</div>\n        <h1>{phrase[termIndex].fullTerm}</h1>\n      </header>\n      <div className=\"flex-container wrap\">\n        {phrases[termIndex].tokens.map((token, tokenIndex) => (\n          <div draggable className=\"flex-item wrap\">\n            <PhraseItem\n              token={token}\n              tokenIndex={token.tokenIndex}\n              updatePhraseMask={updatePhraseToken}\n            />\n          </div>\n        ))}\n      </div>\n\n      <div className=\"flex-container nowrap\">\n        <ul>\n          {phrases[termIndex].tokens.map((token, tokenIndex) => (\n            <SelectListItem token={token} tokenIndex={token.tokenIndex} />\n          ))}\n        </ul>\n        {quizSolved ? (\n          <button onClick={() => nextButton()}>Next challenge</button>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}